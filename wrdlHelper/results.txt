Resolving dependencies...
Downloading packages...
  _fe_analyzer_shared 89.0.0 (90.0.0 available)
  analyzer 8.2.0 (8.3.0 available)
  build 4.0.1 (4.0.2 available)
  characters 1.4.0 (1.4.1 available)
  flutter_lints 5.0.0 (6.0.0 available)
  get_it 7.7.0 (8.2.0 available)
  lints 5.1.1 (6.0.0 available)
  material_color_utilities 0.11.1 (0.13.0 available)
  meta 1.16.0 (1.17.0 available)
  source_gen 4.0.1 (4.0.2 available)
  test_api 0.7.6 (0.7.7 available)
  watcher 1.1.3 (1.1.4 available)
Got dependencies!
12 packages have newer versions incompatible with dependency constraints.
Try `flutter pub outdated` for more information.
00:00 +0: loading /Users/chaos/dev/wrdlHelper/wrdlHelper/test/simple_algorithm_test.dart
00:00 +0: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/simple_algorithm_test.dart: Simple Algorithm Test (setUpAll)
00:00 +1: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/simple_algorithm_test.dart: Simple Algorithm Test (setUpAll)
00:00 +2: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/simple_algorithm_test.dart: Simple Algorithm Test (setUpAll)
00:00 +3: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/simple_algorithm_test.dart: Simple Algorithm Test (setUpAll)
00:00 +4: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/simple_algorithm_test.dart: Simple Algorithm Test (setUpAll)
00:00 +5: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/simple_algorithm_test.dart: Simple Algorithm Test (setUpAll)
00:00 +6: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/simple_algorithm_test.dart: Simple Algorithm Test (setUpAll)
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:00 +7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/simple_algorithm_test.dart: Simple Algorithm Test (setUpAll)
00:00 +7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/ffi_service_configuration_test.dart: FFI Service Configuration Tests setConfiguration() should update configuration correctly
00:00 +8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/ffi_service_configuration_test.dart: FFI Service Configuration Tests setConfiguration() should update configuration correctly
00:00 +9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/ffi_service_configuration_test.dart: FFI Service Configuration Tests setConfiguration() should update configuration correctly
00:00 +10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/simple_algorithm_test.dart: Simple Algorithm Test Test algorithm with known target word
00:00 +11: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/simple_algorithm_test.dart: Simple Algorithm Test Test algorithm with known target word
00:00 +12: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/simple_algorithm_test.dart: Simple Algorithm Test Test algorithm with known target word
🎯 Target word: PAREN

--- GUESS 1 ---
00:00 +13: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/simple_algorithm_test.dart: Simple Algorithm Test Test algorithm with known target word
🤖 Algorithm suggests: TARES
📊 Result: XGGGX

--- GUESS 2 ---
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
🤖 Algorithm suggests: PARER
📊 Result: GGGGX

--- GUESS 3 ---
00:00 +14: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/simple_algorithm_test.dart: Simple Algorithm Test Test algorithm with known target word
🤖 Algorithm suggests: PAREN
📊 Result: GGGGG
00:00 +15: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/simple_algorithm_test.dart: Simple Algorithm Test Test algorithm with known target word
🎉 WON in 3 guesses!
00:00 +16: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/simple_algorithm_test.dart: Simple Algorithm Test Test algorithm with known target word
00:00 +17: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_reliability_test.dart: Visual Feedback System Reliability TDD Tests (setUpAll)
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:00 +17: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should show keyboard keys with correct colors after marking letters
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:00 +18: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should show keyboard keys with correct colors after marking letters
00:00 +19: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should show keyboard keys with correct colors after marking letters
00:00 +20: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should show keyboard keys with correct colors after marking letters
00:00 +21: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should show keyboard keys with correct colors after marking letters
00:00 +22: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should show keyboard keys with correct colors after marking letters
00:00 +23: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should show keyboard keys with correct colors after marking letters
00:00 +24: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should show keyboard keys with correct colors after marking letters
00:00 +25: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should show keyboard keys with correct colors after marking letters
00:00 +26: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should show keyboard keys with correct colors after marking letters
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:00 +27: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should show keyboard keys with correct colors after marking letters
00:00 +28: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should show keyboard keys with correct colors after marking letters
00:00 +29: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should show keyboard keys with correct colors after marking letters
00:00 +30: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should show keyboard keys with correct colors after marking letters
00:00 +31: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should show keyboard keys with correct colors after marking letters
00:00 +32: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should show keyboard keys with correct colors after marking letters
00:00 +33: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should show keyboard keys with correct colors after marking letters
00:00 +34: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should show keyboard keys with correct colors after marking letters
00:00 +35: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should show keyboard keys with correct colors after marking letters
00:00 +36: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should show keyboard keys with correct colors after marking letters
00:00 +37: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should show keyboard keys with correct colors after marking letters
00:00 +38: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should show keyboard keys with correct colors after marking letters
00:00 +39: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should show keyboard keys with correct colors after marking letters
00:00 +40: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should show keyboard keys with correct colors after marking letters
00:01 +41: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should show keyboard keys with correct colors after marking letters

Warning: A call to tap() with finder "Found 1 widget with key [<'tile_0_0'>]: [
  LetterTile-[<'tile_0_0'>],
]" derived an Offset (Offset(328.5, 116.9)) that would not hit test on the specified widget.
Maybe the widget is actually off-screen, or another widget is obscuring it, or the widget cannot receive pointer events.
The finder corresponds to this RenderBox: _RenderLayoutBuilder#e8718
The hit test result at that offset is: HitTestResult(_RenderColoredBox#25e73@Offset(328.5, 116.9), RenderConstrainedBox#f21b6@Offset(328.5, 116.9), RenderMouseRegion#d0e3e@Offset(328.5, 116.9), RenderSemanticsAnnotations#43fdf@Offset(328.5, 116.9), RenderPointerListener#e2486@Offset(328.5, 116.9), RenderSemanticsGestureHandler#40d94@Offset(328.5, 116.9), RenderExcludeSemantics#33012@Offset(328.5, 116.9), RenderBlockSemantics#68206@Offset(328.5, 116.9), RenderIgnorePointer#d7e21@Offset(328.5, 116.9), RenderSemanticsAnnotations#a5525@Offset(328.5, 116.9), _RenderTheater#423cb@Offset(328.5, 116.9), RenderAbsorbPointer#bb2e7@Offset(328.5, 116.9), RenderPointerListener#4964e@Offset(328.5, 116.9), RenderSemanticsAnnotations#91257@Offset(328.5, 116.9), RenderCustomPaint#3fadf@Offset(328.5, 116.9), RenderSemanticsAnnotations#b8fcf@Offset(328.5, 116.9), RenderSemanticsAnnotations#1d382@Offset(328.5, 116.9), RenderTapRegionSurface#74f7b@Offset(328.5, 116.9), RenderSemanticsAnnotations#aa657@Offset(328.5, 116.9), RenderSemanticsAnnotations#f4b7c@Offset(328.5, 116.9), RenderSemanticsAnnotations#1c0ae@Offset(328.5, 116.9), HitTestEntry<HitTestTarget>#f78c1(_ReusableRenderView#98948), HitTestEntry<HitTestTarget>#1cb5b(<AutomatedTestWidgetsFlutterBinding>))
#0      WidgetController._getElementPoint (package:flutter_test/src/controller.dart:2077:25)
#1      WidgetController.getCenter (package:flutter_test/src/controller.dart:1861:12)
#2      WidgetController.tap (package:flutter_test/src/controller.dart:1041:7)
#3      main.<anonymous closure>.<anonymous closure> (file:///Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart:45:22)
<asynchronous suspension>
#4      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:192:15)
<asynchronous suspension>
#5      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1059:5)
<asynchronous suspension>
#6      StackZoneSpecification._registerCallback.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:114:42)
<asynchronous suspension>
To silence this warning, pass "warnIfMissed: false" to "tap()".
To make this warning fatal, set WidgetController.hitTestWarningShouldBeFatal to true.

00:01 +42: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should show keyboard keys with correct colors after marking letters
00:01 +43: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should show keyboard keys with correct colors after marking letters
00:01 +44: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_reliability_test.dart: Visual Feedback System Reliability TDD Tests Visual Feedback Color Changes should update keyboard key colors based on letter states
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:01 +45: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_reliability_test.dart: Visual Feedback System Reliability TDD Tests Visual Feedback Color Changes should update keyboard key colors based on letter states
00:01 +46: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_reliability_test.dart: Visual Feedback System Reliability TDD Tests Visual Feedback Color Changes should update keyboard key colors based on letter states
00:01 +47: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_reliability_test.dart: Visual Feedback System Reliability TDD Tests Visual Feedback Color Changes should update keyboard key colors based on letter states
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:01 +48: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_reliability_test.dart: Visual Feedback System Reliability TDD Tests Visual Feedback Color Changes should update keyboard key colors based on letter states
00:01 +49: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_reliability_test.dart: Visual Feedback System Reliability TDD Tests Visual Feedback Color Changes should update keyboard key colors based on letter states
00:01 +50: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_reliability_test.dart: Visual Feedback System Reliability TDD Tests Visual Feedback Color Changes should update keyboard key colors based on letter states
00:01 +51: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should pre-populate next guess with known letter states
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:01 +51: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/multiple_algorithm_test.dart: Multiple Algorithm Test Test algorithm with 10 random games

🎮 GAME 1
==========
🎯 Target: SHEVA
00:01 +52: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should pre-populate next guess with known letter states
00:01 +52: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/multiple_algorithm_test.dart: Multiple Algorithm Test Test algorithm with 10 random games
🎉 WON in 3 guesses!

🎮 GAME 2
==========
🎯 Target: CUING
🎉 WON in 4 guesses!

🎮 GAME 3
==========
🎯 Target: BIHON
00:01 +52: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should pre-populate next guess with known letter states

Warning: A call to tap() with finder "Found 1 widget with key [<'tile_0_1'>]: [
  LetterTile-[<'tile_0_1'>],
]" derived an Offset (Offset(364.3, 116.9)) that would not hit test on the specified widget.
Maybe the widget is actually off-screen, or another widget is obscuring it, or the widget cannot receive pointer events.
The finder corresponds to this RenderBox: _RenderLayoutBuilder#38890
The hit test result at that offset is: HitTestResult(_RenderColoredBox#9a8ba@Offset(364.3, 116.9), RenderConstrainedBox#0d2aa@Offset(364.3, 116.9), RenderMouseRegion#43e3e@Offset(364.3, 116.9), RenderSemanticsAnnotations#f18de@Offset(364.3, 116.9), RenderPointerListener#bb13e@Offset(364.3, 116.9), RenderSemanticsGestureHandler#dfda7@Offset(364.3, 116.9), RenderExcludeSemantics#1f02b@Offset(364.3, 116.9), RenderBlockSemantics#37cfe@Offset(364.3, 116.9), RenderIgnorePointer#677ce@Offset(364.3, 116.9), RenderSemanticsAnnotations#e4097@Offset(364.3, 116.9), _RenderTheater#66db6@Offset(364.3, 116.9), RenderAbsorbPointer#4bacc@Offset(364.3, 116.9), RenderPointerListener#6e3d6@Offset(364.3, 116.9), RenderSemanticsAnnotations#f2697@Offset(364.3, 116.9), RenderCustomPaint#b8c56@Offset(364.3, 116.9), RenderSemanticsAnnotations#a06a0@Offset(364.3, 116.9), RenderSemanticsAnnotations#fe168@Offset(364.3, 116.9), RenderTapRegionSurface#8d9a2@Offset(364.3, 116.9), RenderSemanticsAnnotations#c3856@Offset(364.3, 116.9), RenderSemanticsAnnotations#d4ba2@Offset(364.3, 116.9), RenderSemanticsAnnotations#bc1cd@Offset(364.3, 116.9), HitTestEntry<HitTestTarget>#d2fc1(_ReusableRenderView#98948), HitTestEntry<HitTestTarget>#41b6b(<AutomatedTestWidgetsFlutterBinding>))
#0      WidgetController._getElementPoint (package:flutter_test/src/controller.dart:2077:25)
#1      WidgetController.getCenter (package:flutter_test/src/controller.dart:1861:12)
#2      WidgetController.tap (package:flutter_test/src/controller.dart:1041:7)
#3      main.<anonymous closure>.<anonymous closure> (file:///Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart:126:20)
<asynchronous suspension>
#4      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:192:15)
<asynchronous suspension>
#5      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1059:5)
<asynchronous suspension>
#6      StackZoneSpecification._registerCallback.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:114:42)
<asynchronous suspension>
To silence this warning, pass "warnIfMissed: false" to "tap()".
To make this warning fatal, set WidgetController.hitTestWarningShouldBeFatal to true.

00:01 +52: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/multiple_algorithm_test.dart: Multiple Algorithm Test Test algorithm with 10 random games
🎉 WON in 3 guesses!

🎮 GAME 4
==========
🎯 Target: MISDO
🎉 WON in 4 guesses!

🎮 GAME 5
==========
🎯 Target: CODEN
🎉 WON in 3 guesses!

🎮 GAME 6
==========
🎯 Target: SNAGS
🎉 WON in 3 guesses!

🎮 GAME 7
==========
🎯 Target: BITTY
🎉 WON in 3 guesses!

🎮 GAME 8
==========
🎯 Target: ROOPY
00:01 +53: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should pre-populate next guess with known letter states
00:01 +53: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/multiple_algorithm_test.dart: Multiple Algorithm Test Test algorithm with 10 random games
🎉 WON in 3 guesses!

🎮 GAME 9
==========
🎯 Target: QUASI
🎉 WON in 3 guesses!

🎮 GAME 10
==========
🎯 Target: TIARA
🎉 WON in 3 guesses!

📊 RESULTS
==========
Games won: 10/10
Success rate: 100.0%
Average guesses: 3.20
00:01 +54: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should pre-populate next guess with known letter states
00:01 +55: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_reliability_test.dart: Visual Feedback System Reliability TDD Tests Service Locator Reliability should not have service locator conflicts between tests
00:01 +56: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should update keyboard colors when letter states change
00:01 +57: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should update keyboard colors when letter states change

Warning: A call to tap() with finder "Found 1 widget with key [<'tile_0_1'>]: [
  LetterTile-[<'tile_0_1'>],
]" derived an Offset (Offset(364.3, 116.9)) that would not hit test on the specified widget.
Maybe the widget is actually off-screen, or another widget is obscuring it, or the widget cannot receive pointer events.
The finder corresponds to this RenderBox: _RenderLayoutBuilder#915cf
The hit test result at that offset is: HitTestResult(_RenderColoredBox#b66f8@Offset(364.3, 116.9), RenderConstrainedBox#22807@Offset(364.3, 116.9), RenderMouseRegion#b7ab6@Offset(364.3, 116.9), RenderSemanticsAnnotations#48bb2@Offset(364.3, 116.9), RenderPointerListener#7fa09@Offset(364.3, 116.9), RenderSemanticsGestureHandler#cd3ae@Offset(364.3, 116.9), RenderExcludeSemantics#84618@Offset(364.3, 116.9), RenderBlockSemantics#7c12d@Offset(364.3, 116.9), RenderIgnorePointer#ba878@Offset(364.3, 116.9), RenderSemanticsAnnotations#0baa8@Offset(364.3, 116.9), _RenderTheater#d6766@Offset(364.3, 116.9), RenderAbsorbPointer#bad18@Offset(364.3, 116.9), RenderPointerListener#85e94@Offset(364.3, 116.9), RenderSemanticsAnnotations#d79f6@Offset(364.3, 116.9), RenderCustomPaint#a31aa@Offset(364.3, 116.9), RenderSemanticsAnnotations#8f7e9@Offset(364.3, 116.9), RenderSemanticsAnnotations#6b2fe@Offset(364.3, 116.9), RenderTapRegionSurface#10e8d@Offset(364.3, 116.9), RenderSemanticsAnnotations#422d4@Offset(364.3, 116.9), RenderSemanticsAnnotations#6b173@Offset(364.3, 116.9), RenderSemanticsAnnotations#635ad@Offset(364.3, 116.9), HitTestEntry<HitTestTarget>#944f2(_ReusableRenderView#98948), HitTestEntry<HitTestTarget>#d595e(<AutomatedTestWidgetsFlutterBinding>))
#0      WidgetController._getElementPoint (package:flutter_test/src/controller.dart:2077:25)
#1      WidgetController.getCenter (package:flutter_test/src/controller.dart:1861:12)
#2      WidgetController.tap (package:flutter_test/src/controller.dart:1041:7)
#3      main.<anonymous closure>.<anonymous closure> (file:///Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart:201:20)
<asynchronous suspension>
#4      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:192:15)
<asynchronous suspension>
#5      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1059:5)
<asynchronous suspension>
#6      StackZoneSpecification._registerCallback.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:114:42)
<asynchronous suspension>
To silence this warning, pass "warnIfMissed: false" to "tap()".
To make this warning fatal, set WidgetController.hitTestWarningShouldBeFatal to true.

00:01 +58: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_reliability_test.dart: Visual Feedback System Reliability TDD Tests Visual Feedback Integration should provide visual feedback for complete game flow
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:01 +59: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_reliability_test.dart: Visual Feedback System Reliability TDD Tests Visual Feedback Integration should provide visual feedback for complete game flow
00:01 +60: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_reliability_test.dart: Visual Feedback System Reliability TDD Tests Visual Feedback Integration should provide visual feedback for complete game flow
00:01 +61: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_reliability_test.dart: Visual Feedback System Reliability TDD Tests Visual Feedback Integration should provide visual feedback for complete game flow
00:01 +62: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_reliability_test.dart: Visual Feedback System Reliability TDD Tests Visual Feedback Integration should provide visual feedback for complete game flow
00:01 +63: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_reliability_test.dart: Visual Feedback System Reliability TDD Tests Visual Feedback Integration should provide visual feedback for complete game flow
00:01 +64: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_reliability_test.dart: Visual Feedback System Reliability TDD Tests Visual Feedback Integration should provide visual feedback for complete game flow
00:01 +65: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_reliability_test.dart: Visual Feedback System Reliability TDD Tests Visual Feedback Integration should provide visual feedback for complete game flow
00:01 +66: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_reliability_test.dart: Visual Feedback System Reliability TDD Tests Visual Feedback Integration should provide visual feedback for complete game flow
00:01 +67: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_reliability_test.dart: Visual Feedback System Reliability TDD Tests Visual Feedback Integration should provide visual feedback for complete game flow
00:01 +68: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_reliability_test.dart: Visual Feedback System Reliability TDD Tests Visual Feedback Integration should provide visual feedback for complete game flow
00:01 +69: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_reliability_test.dart: Visual Feedback System Reliability TDD Tests Visual Feedback Integration should provide visual feedback for complete game flow
00:01 +70: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_reliability_test.dart: Visual Feedback System Reliability TDD Tests Visual Feedback Integration should provide visual feedback for complete game flow
00:01 +71: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_reliability_test.dart: Visual Feedback System Reliability TDD Tests Visual Feedback Integration should provide visual feedback for complete game flow
00:01 +72: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_reliability_test.dart: Visual Feedback System Reliability TDD Tests Visual Feedback Integration should provide visual feedback for complete game flow
00:01 +73: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_reliability_test.dart: Visual Feedback System Reliability TDD Tests Visual Feedback Integration should provide visual feedback for complete game flow
00:01 +74: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_reliability_test.dart: Visual Feedback System Reliability TDD Tests Visual Feedback Integration should provide visual feedback for complete game flow
00:01 +75: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_reliability_test.dart: Visual Feedback System Reliability TDD Tests Visual Feedback Integration should provide visual feedback for complete game flow
00:01 +76: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_reliability_test.dart: Visual Feedback System Reliability TDD Tests Visual Feedback Integration should provide visual feedback for complete game flow
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:01 +77: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_reliability_test.dart: Visual Feedback System Reliability TDD Tests Visual Feedback Integration should provide visual feedback for complete game flow
00:01 +78: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_reliability_test.dart: Visual Feedback System Reliability TDD Tests Visual Feedback Integration should provide visual feedback for complete game flow
00:01 +79: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should handle multiple guesses with persistent keyboard colors
00:01 +80: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should handle multiple guesses with persistent keyboard colors
00:01 +81: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should handle multiple guesses with persistent keyboard colors
00:01 +82: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should handle multiple guesses with persistent keyboard colors
00:01 +83: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should handle multiple guesses with persistent keyboard colors
00:01 +84: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should handle multiple guesses with persistent keyboard colors
00:01 +85: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should handle multiple guesses with persistent keyboard colors
00:01 +86: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should handle multiple guesses with persistent keyboard colors
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets

Warning: A call to tap() with finder "Found 1 widget with key [<'tile_0_1'>]: [
  LetterTile-[<'tile_0_1'>],
]" derived an Offset (Offset(364.3, 116.9)) that would not hit test on the specified widget.
Maybe the widget is actually off-screen, or another widget is obscuring it, or the widget cannot receive pointer events.
The finder corresponds to this RenderBox: _RenderLayoutBuilder#2f8ff
The hit test result at that offset is: HitTestResult(_RenderColoredBox#84381@Offset(364.3, 116.9), RenderConstrainedBox#f61e5@Offset(364.3, 116.9), RenderMouseRegion#456a3@Offset(364.3, 116.9), RenderSemanticsAnnotations#7f9a5@Offset(364.3, 116.9), RenderPointerListener#b63bc@Offset(364.3, 116.9), RenderSemanticsGestureHandler#ac392@Offset(364.3, 116.9), RenderExcludeSemantics#7bc9f@Offset(364.3, 116.9), RenderBlockSemantics#994c7@Offset(364.3, 116.9), RenderIgnorePointer#38073@Offset(364.3, 116.9), RenderSemanticsAnnotations#c292d@Offset(364.3, 116.9), _RenderTheater#26275@Offset(364.3, 116.9), RenderAbsorbPointer#601bb@Offset(364.3, 116.9), RenderPointerListener#73e3c@Offset(364.3, 116.9), RenderSemanticsAnnotations#78d28@Offset(364.3, 116.9), RenderCustomPaint#94b70@Offset(364.3, 116.9), RenderSemanticsAnnotations#fb767@Offset(364.3, 116.9), RenderSemanticsAnnotations#2a8e3@Offset(364.3, 116.9), RenderTapRegionSurface#ffd79@Offset(364.3, 116.9), RenderSemanticsAnnotations#1af44@Offset(364.3, 116.9), RenderSemanticsAnnotations#f3da9@Offset(364.3, 116.9), RenderSemanticsAnnotations#0eca8@Offset(364.3, 116.9), HitTestEntry<HitTestTarget>#7edb2(_ReusableRenderView#98948), HitTestEntry<HitTestTarget>#96d5a(<AutomatedTestWidgetsFlutterBinding>))
#0      WidgetController._getElementPoint (package:flutter_test/src/controller.dart:2077:25)
#1      WidgetController.getCenter (package:flutter_test/src/controller.dart:1861:12)
#2      WidgetController.tap (package:flutter_test/src/controller.dart:1041:7)
#3      main.<anonymous closure>.<anonymous closure> (file:///Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart:236:22)
<asynchronous suspension>
#4      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:192:15)
<asynchronous suspension>
#5      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1059:5)
<asynchronous suspension>
#6      StackZoneSpecification._registerCallback.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:114:42)
<asynchronous suspension>
To silence this warning, pass "warnIfMissed: false" to "tap()".
To make this warning fatal, set WidgetController.hitTestWarningShouldBeFatal to true.


Warning: A call to tap() with finder "Found 1 widget with key [<'tile_1_4'>]: [
  LetterTile-[<'tile_1_4'>],
]" derived an Offset (Offset(471.5, 162.6)) that would not hit test on the specified widget.
Maybe the widget is actually off-screen, or another widget is obscuring it, or the widget cannot receive pointer events.
The finder corresponds to this RenderBox: _RenderLayoutBuilder#33bc2
The hit test result at that offset is: HitTestResult(_RenderColoredBox#8fb08@Offset(471.5, 162.6), RenderConstrainedBox#72732@Offset(471.5, 162.6), RenderMouseRegion#d4b1a@Offset(471.5, 162.6), RenderSemanticsAnnotations#ab633@Offset(471.5, 162.6), RenderPointerListener#0bd8d@Offset(471.5, 162.6), RenderSemanticsGestureHandler#f9681@Offset(471.5, 162.6), RenderExcludeSemantics#1983a@Offset(471.5, 162.6), RenderBlockSemantics#18818@Offset(471.5, 162.6), RenderIgnorePointer#28762@Offset(471.5, 162.6), RenderSemanticsAnnotations#e355a@Offset(471.5, 162.6), _RenderTheater#26275@Offset(471.5, 162.6), RenderAbsorbPointer#601bb@Offset(471.5, 162.6), RenderPointerListener#73e3c@Offset(471.5, 162.6), RenderSemanticsAnnotations#78d28@Offset(471.5, 162.6), RenderCustomPaint#94b70@Offset(471.5, 162.6), RenderSemanticsAnnotations#fb767@Offset(471.5, 162.6), RenderSemanticsAnnotations#2a8e3@Offset(471.5, 162.6), RenderTapRegionSurface#ffd79@Offset(471.5, 162.6), RenderSemanticsAnnotations#1af44@Offset(471.5, 162.6), RenderSemanticsAnnotations#f3da9@Offset(471.5, 162.6), RenderSemanticsAnnotations#0eca8@Offset(471.5, 162.6), HitTestEntry<HitTestTarget>#9577b(_ReusableRenderView#98948), HitTestEntry<HitTestTarget>#c0f86(<AutomatedTestWidgetsFlutterBinding>))
#0      WidgetController._getElementPoint (package:flutter_test/src/controller.dart:2077:25)
#1      WidgetController.getCenter (package:flutter_test/src/controller.dart:1861:12)
#2      WidgetController.tap (package:flutter_test/src/controller.dart:1041:7)
#3      main.<anonymous closure>.<anonymous closure> (file:///Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart:249:22)
<asynchronous suspension>
#4      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:192:15)
<asynchronous suspension>
#5      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1059:5)
<asynchronous suspension>
#6      StackZoneSpecification._registerCallback.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:114:42)
<asynchronous suspension>
To silence this warning, pass "warnIfMissed: false" to "tap()".
To make this warning fatal, set WidgetController.hitTestWarningShouldBeFatal to true.

00:02 +87: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/wordle_screen_service_locator_integration_test.dart: WordleGameScreen Service Locator Integration Tests should use service locator instead of direct AppService creation
00:02 +87: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should reset keyboard colors when starting new game

Warning: A call to tap() with finder "Found 1 widget with key [<'tile_0_1'>]: [
  LetterTile-[<'tile_0_1'>],
]" derived an Offset (Offset(364.3, 116.9)) that would not hit test on the specified widget.
Maybe the widget is actually off-screen, or another widget is obscuring it, or the widget cannot receive pointer events.
The finder corresponds to this RenderBox: _RenderLayoutBuilder#a6a81
The hit test result at that offset is: HitTestResult(_RenderColoredBox#f3ea0@Offset(364.3, 116.9), RenderConstrainedBox#5525c@Offset(364.3, 116.9), RenderMouseRegion#9c022@Offset(364.3, 116.9), RenderSemanticsAnnotations#204ee@Offset(364.3, 116.9), RenderPointerListener#24414@Offset(364.3, 116.9), RenderSemanticsGestureHandler#2bc27@Offset(364.3, 116.9), RenderExcludeSemantics#db7b9@Offset(364.3, 116.9), RenderBlockSemantics#fe1eb@Offset(364.3, 116.9), RenderIgnorePointer#96f89@Offset(364.3, 116.9), RenderSemanticsAnnotations#4b8b6@Offset(364.3, 116.9), _RenderTheater#866aa@Offset(364.3, 116.9), RenderAbsorbPointer#65841@Offset(364.3, 116.9), RenderPointerListener#61541@Offset(364.3, 116.9), RenderSemanticsAnnotations#ca0a2@Offset(364.3, 116.9), RenderCustomPaint#d71f2@Offset(364.3, 116.9), RenderSemanticsAnnotations#6cf05@Offset(364.3, 116.9), RenderSemanticsAnnotations#6394c@Offset(364.3, 116.9), RenderTapRegionSurface#1204b@Offset(364.3, 116.9), RenderSemanticsAnnotations#8339f@Offset(364.3, 116.9), RenderSemanticsAnnotations#308db@Offset(364.3, 116.9), RenderSemanticsAnnotations#df927@Offset(364.3, 116.9), HitTestEntry<HitTestTarget>#297ed(_ReusableRenderView#98948), HitTestEntry<HitTestTarget>#c44fe(<AutomatedTestWidgetsFlutterBinding>))
#0      WidgetController._getElementPoint (package:flutter_test/src/controller.dart:2077:25)
#1      WidgetController.getCenter (package:flutter_test/src/controller.dart:1861:12)
#2      WidgetController.tap (package:flutter_test/src/controller.dart:1041:7)
#3      main.<anonymous closure>.<anonymous closure> (file:///Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart:288:20)
<asynchronous suspension>
#4      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:192:15)
<asynchronous suspension>
#5      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1059:5)
<asynchronous suspension>
#6      StackZoneSpecification._registerCallback.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:114:42)
<asynchronous suspension>
To silence this warning, pass "warnIfMissed: false" to "tap()".
To make this warning fatal, set WidgetController.hitTestWarningShouldBeFatal to true.

00:02 +88: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/wordle_screen_service_locator_integration_test.dart: WordleGameScreen Service Locator Integration Tests should use service locator instead of direct AppService creation
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:02 +89: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/wordle_screen_service_locator_integration_test.dart: WordleGameScreen Service Locator Integration Tests should use service locator instead of direct AppService creation
00:02 +90: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/wordle_screen_service_locator_integration_test.dart: WordleGameScreen Service Locator Integration Tests should use service locator instead of direct AppService creation
00:02 +91: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/wordle_screen_service_locator_integration_test.dart: WordleGameScreen Service Locator Integration Tests should use service locator instead of direct AppService creation
00:02 +92: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/wordle_screen_service_locator_integration_test.dart: WordleGameScreen Service Locator Integration Tests should use service locator instead of direct AppService creation
00:02 +93: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/wordle_screen_service_locator_integration_test.dart: WordleGameScreen Service Locator Integration Tests should use service locator instead of direct AppService creation
00:02 +94: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/wordle_screen_service_locator_integration_test.dart: WordleGameScreen Service Locator Integration Tests should use service locator instead of direct AppService creation
00:02 +95: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/wordle_screen_service_locator_integration_test.dart: WordleGameScreen Service Locator Integration Tests should use service locator instead of direct AppService creation
00:02 +96: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/wordle_screen_service_locator_integration_test.dart: WordleGameScreen Service Locator Integration Tests should use service locator instead of direct AppService creation
00:02 +97: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/wordle_screen_service_locator_integration_test.dart: WordleGameScreen Service Locator Integration Tests should use service locator instead of direct AppService creation
00:02 +98: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/wordle_screen_service_locator_integration_test.dart: WordleGameScreen Service Locator Integration Tests should use service locator instead of direct AppService creation
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:02 +99: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/wordle_screen_service_locator_integration_test.dart: WordleGameScreen Service Locator Integration Tests should use service locator instead of direct AppService creation
00:02 +100: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/wordle_screen_service_locator_integration_test.dart: WordleGameScreen Service Locator Integration Tests should use service locator instead of direct AppService creation
00:02 +101: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should handle edge case with duplicate letters correctly
00:02 +102: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should handle edge case with duplicate letters correctly
00:02 +103: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should handle edge case with duplicate letters correctly
00:02 +104: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should handle edge case with duplicate letters correctly
00:02 +105: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should handle edge case with duplicate letters correctly
00:02 +106: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should handle edge case with duplicate letters correctly
00:02 +107: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should handle edge case with duplicate letters correctly
00:02 +108: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should handle edge case with duplicate letters correctly
00:02 +109: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/visual_feedback/visual_feedback_persistence_test.dart: Visual Feedback Persistence TDD Tests should handle edge case with duplicate letters correctly
00:02 +110: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests MyApp should render correctly
00:02 +111: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests MyApp should render correctly
00:02 +112: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests MyApp should render correctly
00:02 +113: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests MyApp should render correctly
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:03 +114: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/complete_game_flow_test.dart: Complete Game Flow Integration Tests should complete full game workflow from start to finish
00:03 +115: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/complete_game_flow_test.dart: Complete Game Flow Integration Tests should complete full game workflow from start to finish
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:03 +116: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/complete_game_flow_test.dart: Complete Game Flow Integration Tests should complete full game workflow from start to finish
00:03 +117: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/complete_game_flow_test.dart: Complete Game Flow Integration Tests should complete full game workflow from start to finish
00:03 +118: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/complete_game_flow_test.dart: Complete Game Flow Integration Tests should complete full game workflow from start to finish
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:03 +118: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/solver_benchmark_test.dart: Solver Benchmark baseline vs reference-mode latency
Benchmark — baseline: 3649µs, reference: 967µs
00:03 +119: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/complete_game_flow_test.dart: Complete Game Flow Integration Tests should complete full game workflow from start to finish
00:03 +120: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/main_service_locator_integration_test.dart: Main Service Locator Integration Tests should initialize services through service locator
00:03 +120: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should be responsive to different screen sizes
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following TestFailure was thrown running a test:
Expected: exactly one matching candidate
  Actual: _TextContainingWidgetFinder:<Found 0 widgets with text containing ✅ All services
initialized successfully!: []>
   Which: means none were found but one was expected

When the exception was thrown, this was the stack:
#4      main.<anonymous closure>.<anonymous closure> (file:///Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart:128:9)
<asynchronous suspension>
#5      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:192:15)
<asynchronous suspension>
#6      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1059:5)
<asynchronous suspension>
<asynchronous suspension>
(elided one frame from package:stack_trace)

This was caught by the test expectation on the following line:
  file:///Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart line 128
The test description was:
  App should be responsive to different screen sizes
════════════════════════════════════════════════════════════════════════════════════════════════════
00:03 +120 -1: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/main_service_locator_integration_test.dart: Main Service Locator Integration Tests should initialize services through service locator
00:03 +120 -1: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should be responsive to different screen sizes [E]
  Test failed. See exception logs above.
  The test description was: App should be responsive to different screen sizes
  
00:03 +121 -1: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/main_service_locator_integration_test.dart: Main Service Locator Integration Tests should initialize services through service locator
00:03 +122 -1: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/main_app_test.dart: Main App TDD Tests should create app with correct title
00:03 +123 -1: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/main_app_test.dart: Main App TDD Tests should create app with correct title
00:03 +124 -1: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/main_app_test.dart: Main App TDD Tests should create app with correct title
00:03 +125 -1: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle orientation changes
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:03 +126 -1: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle orientation changes
00:03 +127 -1: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle orientation changes
00:03 +128 -1: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle orientation changes
00:03 +129 -1: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle orientation changes
00:03 +130 -1: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle orientation changes
00:03 +131 -1: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle orientation changes
00:03 +132 -1: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle orientation changes
00:03 +133 -1: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle orientation changes
00:03 +134 -1: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle orientation changes
00:03 +135 -1: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle orientation changes
00:03 +136 -1: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle orientation changes
00:03 +137 -1: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle orientation changes
00:03 +138 -1: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle orientation changes
00:04 +139 -1: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle orientation changes
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following TestFailure was thrown running a test:
Expected: exactly one matching candidate
  Actual: _TextContainingWidgetFinder:<Found 0 widgets with text containing ✅ All services
initialized successfully!: []>
   Which: means none were found but one was expected

When the exception was thrown, this was the stack:
#4      main.<anonymous closure>.<anonymous closure> (file:///Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart:144:7)
<asynchronous suspension>
#5      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:192:15)
<asynchronous suspension>
#6      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1059:5)
<asynchronous suspension>
<asynchronous suspension>
(elided one frame from package:stack_trace)

This was caught by the test expectation on the following line:
  file:///Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart line 144
The test description was:
  App should handle orientation changes
════════════════════════════════════════════════════════════════════════════════════════════════════
00:04 +139 -2: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/complete_game_flow_test.dart: Complete Game Flow Integration Tests should handle multiple guess analysis
00:04 +139 -2: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle orientation changes [E]
  Test failed. See exception logs above.
  The test description was: App should handle orientation changes
  
00:04 +140 -2: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/complete_game_flow_test.dart: Complete Game Flow Integration Tests should handle multiple guess analysis
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:04 +141 -2: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/complete_game_flow_test.dart: Complete Game Flow Integration Tests should handle multiple guess analysis
00:04 +142 -2: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should maintain state during rebuilds
00:04 +143 -2: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should maintain state during rebuilds
00:04 +144 -2: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should maintain state during rebuilds
00:04 +145 -2: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should maintain state during rebuilds
00:04 +146 -2: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should maintain state during rebuilds
00:04 +147 -2: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should maintain state during rebuilds
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following TestFailure was thrown running a test:
Expected: exactly one matching candidate
  Actual: _TextContainingWidgetFinder:<Found 0 widgets with text containing ✅ All services
initialized successfully!: []>
   Which: means none were found but one was expected

When the exception was thrown, this was the stack:
#4      main.<anonymous closure>.<anonymous closure> (file:///Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart:152:7)
<asynchronous suspension>
#5      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:192:15)
<asynchronous suspension>
#6      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1059:5)
<asynchronous suspension>
<asynchronous suspension>
(elided one frame from package:stack_trace)

This was caught by the test expectation on the following line:
  file:///Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart line 152
The test description was:
  App should maintain state during rebuilds
════════════════════════════════════════════════════════════════════════════════════════════════════
00:04 +147 -3: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/main_app_test.dart: Main App TDD Tests should handle different screen sizes
00:04 +147 -3: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should maintain state during rebuilds [E]
  Test failed. See exception logs above.
  The test description was: App should maintain state during rebuilds
  
00:04 +148 -3: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/main_app_test.dart: Main App TDD Tests should handle different screen sizes
00:04 +149 -3: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/main_app_test.dart: Main App TDD Tests should handle different screen sizes
00:04 +150 -3: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/main_app_test.dart: Main App TDD Tests should handle different screen sizes
00:04 +151 -3: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/main_app_test.dart: Main App TDD Tests should handle different screen sizes
00:04 +152 -3: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/main_app_test.dart: Main App TDD Tests should handle different screen sizes
00:04 +153 -3: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle different text scales
00:04 +154 -3: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle different text scales
00:04 +155 -3: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle different text scales
00:04 +156 -3: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle different text scales
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following TestFailure was thrown running a test:
Expected: exactly one matching candidate
  Actual: _TextContainingWidgetFinder:<Found 0 widgets with text containing ✅ All services
initialized successfully!: []>
   Which: means none were found but one was expected

When the exception was thrown, this was the stack:
#4      main.<anonymous closure>.<anonymous closure> (file:///Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart:187:9)
<asynchronous suspension>
#5      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:192:15)
<asynchronous suspension>
#6      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1059:5)
<asynchronous suspension>
<asynchronous suspension>
(elided one frame from package:stack_trace)

This was caught by the test expectation on the following line:
  file:///Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart line 187
The test description was:
  App should handle different text scales
════════════════════════════════════════════════════════════════════════════════════════════════════
00:04 +156 -4: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/complete_game_flow_test.dart: Complete Game Flow Integration Tests should handle error scenarios gracefully
00:04 +156 -4: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle different text scales [E]
  Test failed. See exception logs above.
  The test description was: App should handle different text scales
  
00:04 +157 -4: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/complete_game_flow_test.dart: Complete Game Flow Integration Tests should handle error scenarios gracefully
00:04 +158 -4: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle system UI overlay changes
00:04 +159 -4: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/main_app_test.dart: Main App TDD Tests should handle different locales
00:04 +160 -4: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/complete_game_flow_test.dart: Complete Game Flow Integration Tests should maintain state across app lifecycle
00:04 +161 -4: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/complete_game_flow_test.dart: Complete Game Flow Integration Tests should maintain state across app lifecycle
00:04 +162 -4: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/complete_game_flow_test.dart: Complete Game Flow Integration Tests should maintain state across app lifecycle
00:04 +163 -4: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/complete_game_flow_test.dart: Complete Game Flow Integration Tests should maintain state across app lifecycle
00:04 +164 -4: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/complete_game_flow_test.dart: Complete Game Flow Integration Tests should maintain state across app lifecycle
00:04 +165 -4: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/complete_game_flow_test.dart: Complete Game Flow Integration Tests should maintain state across app lifecycle
00:04 +166 -4: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/complete_game_flow_test.dart: Complete Game Flow Integration Tests should maintain state across app lifecycle
00:04 +166 -5: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/complete_game_flow_test.dart: Complete Game Flow Integration Tests should maintain state across app lifecycle
00:04 +166 -5: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/project_rename_test.dart: Project Rename Tests should maintain all existing functionality after rename [E]
  Expected: false
    Actual: <true>
  Rename should not break existing functionality: Expected: a value greater than <0>
    Actual: <0>
     Which: is not a value greater than <0>
  
  
  package:matcher                                     expect
  package:flutter_test/src/widget_tester.dart 473:18  expect
  test/project_rename_test.dart 99:9                  main.<fn>.<fn>
  
00:04 +167 -5: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/complete_game_flow_test.dart: Complete Game Flow Integration Tests should maintain state across app lifecycle
00:05 +168 -5: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/complete_game_flow_test.dart: Complete Game Flow Integration Tests should maintain state across app lifecycle
00:05 +169 -5: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory pressure
00:05 +170 -5: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory pressure
00:05 +171 -5: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory pressure
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following TestFailure was thrown running a test:
Expected: exactly one matching candidate
  Actual: _TextContainingWidgetFinder:<Found 0 widgets with text containing ✅ All services
initialized successfully!: []>
   Which: means none were found but one was expected

When the exception was thrown, this was the stack:
#4      main.<anonymous closure>.<anonymous closure> (file:///Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart:211:7)
<asynchronous suspension>
#5      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:192:15)
<asynchronous suspension>
#6      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1059:5)
<asynchronous suspension>
<asynchronous suspension>
(elided one frame from package:stack_trace)

This was caught by the test expectation on the following line:
  file:///Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart line 211
The test description was:
  App should handle memory pressure
════════════════════════════════════════════════════════════════════════════════════════════════════
00:05 +171 -6: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/complete_game_flow_test.dart: Complete Game Flow Integration Tests should handle complete keyboard workflow with valid and invalid inputs
00:05 +171 -6: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory pressure [E]
  Test failed. See exception logs above.
  The test description was: App should handle memory pressure
  
00:05 +172 -6: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/complete_game_flow_test.dart: Complete Game Flow Integration Tests should handle complete keyboard workflow with valid and invalid inputs
00:05 +173 -6: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/complete_game_flow_test.dart: Complete Game Flow Integration Tests should handle complete keyboard workflow with valid and invalid inputs
00:05 +174 -6: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/complete_game_flow_test.dart: Complete Game Flow Integration Tests should handle complete keyboard workflow with valid and invalid inputs
00:05 +175 -6: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/complete_game_flow_test.dart: Complete Game Flow Integration Tests should handle complete keyboard workflow with valid and invalid inputs
00:05 +176 -6: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/complete_game_flow_test.dart: Complete Game Flow Integration Tests should handle complete keyboard workflow with valid and invalid inputs
00:05 +176 -6: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle rapid rebuilds
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following TestFailure was thrown running a test:
Expected: exactly one matching candidate
  Actual: _TextContainingWidgetFinder:<Found 0 widgets with text containing ✅ All services
initialized successfully!: []>
   Which: means none were found but one was expected

When the exception was thrown, this was the stack:
#4      main.<anonymous closure>.<anonymous closure> (file:///Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart:226:7)
<asynchronous suspension>
#5      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:192:15)
<asynchronous suspension>
#6      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1059:5)
<asynchronous suspension>
<asynchronous suspension>
(elided one frame from package:stack_trace)

This was caught by the test expectation on the following line:
  file:///Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart line 226
The test description was:
  App should handle rapid rebuilds
════════════════════════════════════════════════════════════════════════════════════════════════════
00:05 +176 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/complete_game_flow_test.dart: Complete Game Flow Integration Tests should handle complete keyboard workflow with valid and invalid inputs
00:05 +176 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle rapid rebuilds [E]
  Test failed. See exception logs above.
  The test description was: App should handle rapid rebuilds
  
00:05 +177 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/main_app_test.dart: Main App TDD Tests should handle different input methods
00:05 +178 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:05 +179 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes
00:05 +180 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes
00:05 +181 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes
00:05 +182 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes
00:05 +183 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes
00:05 +184 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes
00:05 +185 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes
00:05 +186 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes
00:05 +187 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes
00:05 +188 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes
00:05 +189 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes
00:05 +190 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes
00:05 +191 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes
00:05 +192 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes
00:05 +193 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes
00:05 +194 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes
00:05 +195 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes
00:05 +196 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes
00:05 +197 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes
00:05 +198 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes
00:05 +199 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes
00:05 +200 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes
00:05 +201 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes
00:05 +202 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes
00:05 +203 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes
00:05 +204 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes
00:05 +205 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes
00:05 +206 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes
00:05 +207 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes
00:05 +208 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes
00:05 +209 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes
00:05 +210 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes
00:05 +211 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes
00:05 +212 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes
00:05 +213 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes
00:05 +214 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes
00:05 +215 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes
00:05 +216 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes
00:05 +217 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes
00:05 +218 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes
00:05 +219 -7: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following TestFailure was thrown running a test:
Expected: exactly one matching candidate
  Actual: _TextContainingWidgetFinder:<Found 0 widgets with text containing ✅ All services
initialized successfully!: []>
   Which: means none were found but one was expected

When the exception was thrown, this was the stack:
#4      main.<anonymous closure>.<anonymous closure> (file:///Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart:248:7)
<asynchronous suspension>
#5      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:192:15)
<asynchronous suspension>
#6      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1059:5)
<asynchronous suspension>
<asynchronous suspension>
(elided one frame from package:stack_trace)

This was caught by the test expectation on the following line:
  file:///Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart line 248
The test description was:
  App should handle widget tree changes
════════════════════════════════════════════════════════════════════════════════════════════════════
00:05 +219 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/complete_game_flow_test.dart: Complete Game Flow Integration Tests should handle different screen orientations
00:05 +219 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle widget tree changes [E]
  Test failed. See exception logs above.
  The test description was: App should handle widget tree changes
  
00:05 +220 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/complete_game_flow_test.dart: Complete Game Flow Integration Tests should handle different screen orientations
00:05 +221 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle gesture recognition
00:05 +222 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/complete_game_flow_test.dart: Complete Game Flow Integration Tests should handle memory management correctly
00:05 +223 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/complete_game_flow_test.dart: Complete Game Flow Integration Tests should handle memory management correctly
00:05 +224 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/complete_game_flow_test.dart: Complete Game Flow Integration Tests should handle memory management correctly
00:05 +225 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/complete_game_flow_test.dart: Complete Game Flow Integration Tests should handle memory management correctly
00:05 +226 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/complete_game_flow_test.dart: Complete Game Flow Integration Tests should handle memory management correctly
00:05 +227 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/complete_game_flow_test.dart: Complete Game Flow Integration Tests should handle memory management correctly
00:05 +228 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/complete_game_flow_test.dart: Complete Game Flow Integration Tests should handle memory management correctly
00:05 +229 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/complete_game_flow_test.dart: Complete Game Flow Integration Tests should handle memory management correctly
00:05 +230 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle performance
00:06 +231 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +232 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +233 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +234 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +235 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +236 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +237 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +238 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +239 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +240 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +241 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +242 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +243 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +244 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +245 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +246 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +247 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +248 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +249 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +250 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +251 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +252 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +253 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +254 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +255 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +256 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +257 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +258 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +259 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +260 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +261 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +262 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +263 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +264 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +265 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +266 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +267 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +268 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +269 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +270 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +271 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +272 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +273 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +274 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +275 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +276 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +277 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +278 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +279 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +280 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +281 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +282 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +283 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +284 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +285 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +286 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +287 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +288 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +289 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +290 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +291 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +292 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +293 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
00:06 +294 -8: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following TestFailure was thrown running a test:
Expected: exactly one matching candidate
  Actual: _TextContainingWidgetFinder:<Found 0 widgets with text containing ✅ All services
initialized successfully!: []>
   Which: means none were found but one was expected

When the exception was thrown, this was the stack:
#4      main.<anonymous closure>.<anonymous closure> (file:///Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart:355:7)
<asynchronous suspension>
#5      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:192:15)
<asynchronous suspension>
#6      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1059:5)
<asynchronous suspension>
<asynchronous suspension>
(elided one frame from package:stack_trace)

This was caught by the test expectation on the following line:
  file:///Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart line 355
The test description was:
  App should handle memory usage
════════════════════════════════════════════════════════════════════════════════════════════════════
00:06 +294 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests App should handle memory usage [E]
  Test failed. See exception logs above.
  The test description was: App should handle memory usage
  
00:06 +294 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/integration/widget_test.dart: Widget Tests (tearDownAll)
00:06 +294 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/debug_filter_test.dart: Debug Filter Tests (setUpAll)
00:06 +294 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/debug_filter_test.dart: Debug Filter Tests debug word filtering
Original words: [CRANE, SLATE, CRATE, PLATE, GRATE, TRACE]
Guess results: [(CRANE, [G, Y, X, X, Y])]
Filtered words: []
Filtered count: 0
All green filtered words: [CRANE]
All green filtered count: 1
No restrictions filtered words: []
No restrictions filtered count: 0
00:06 +295 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/debug_filter_test.dart: Debug Filter Tests (tearDownAll)
00:06 +295 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/ultra_simple_test.dart: Ultra Simple Tests (setUpAll)
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:06 +295 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/ultra_simple_test.dart: Ultra Simple Tests test word filtering with all green
00:06 +296 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/ultra_simple_test.dart: Ultra Simple Tests test word filtering with one green
00:06 +297 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/ultra_simple_test.dart: Ultra Simple Tests (tearDownAll)
00:06 +297 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/ffi_service_performance_test.dart: FFI Service Performance Tests Memory Usage Tests should handle memory allocation efficiently
00:06 +298 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/ffi_service_performance_test.dart: FFI Service Performance Tests Memory Usage Tests should handle memory pressure gracefully
00:06 +299 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/ffi_service_performance_test.dart: FFI Service Performance Tests Memory Usage Tests should not leak memory during repeated operations
00:06 +300 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/ffi_service_performance_test.dart: FFI Service Performance Tests Response Time Benchmarks should respond within acceptable time limits
00:06 +301 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/ffi_service_performance_test.dart: FFI Service Performance Tests Response Time Benchmarks should handle concurrent requests efficiently
00:06 +302 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/ffi_service_performance_test.dart: FFI Service Performance Tests Response Time Benchmarks should maintain performance under load
00:06 +303 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/ffi_service_performance_test.dart: FFI Service Performance Tests Stress Testing should handle maximum word list size
00:06 +304 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/ffi_service_performance_test.dart: FFI Service Performance Tests Stress Testing should handle complex guess results
00:06 +305 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/ffi_service_performance_test.dart: FFI Service Performance Tests Stress Testing should handle rapid successive calls
00:06 +306 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/ffi_service_performance_test.dart: FFI Service Performance Tests Resource Management should clean up resources properly
00:06 +307 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/ffi_service_performance_test.dart: FFI Service Performance Tests Resource Management should handle resource exhaustion gracefully
00:06 +308 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/word_list_sync_test.dart: Word List Synchronization Tests (setUpAll)
00:06 +309 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/word_list_sync_test.dart: Word List Synchronization Tests (setUpAll)
00:06 +310 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/word_list_sync_test.dart: Word List Synchronization Tests (setUpAll)
00:06 +311 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/word_list_sync_test.dart: Word List Synchronization Tests (setUpAll)
00:06 +312 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/word_list_sync_test.dart: Word List Synchronization Tests (setUpAll)
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:06 +312 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/ffi_service_performance_test.dart: FFI Service Performance Tests Performance Regression Tests should not degrade performance over time
00:06 +313 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/ffi_service_performance_test.dart: FFI Service Performance Tests Performance Regression Tests should not degrade performance over time
00:06 +314 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/ffi_service_performance_test.dart: FFI Service Performance Tests Performance Regression Tests should not degrade performance over time
00:06 +315 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/ffi_service_performance_test.dart: FFI Service Performance Tests Performance Regression Tests should not degrade performance over time
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:07 +316 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/ffi_service_performance_test.dart: FFI Service Performance Tests Performance Regression Tests should not degrade performance over time
00:07 +317 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/ffi_service_performance_test.dart: FFI Service Performance Tests Performance Regression Tests should not degrade performance over time
00:07 +318 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/ffi_service_performance_test.dart: FFI Service Performance Tests Performance Regression Tests should not degrade performance over time
00:07 +319 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/ffi_service_performance_test.dart: FFI Service Performance Tests Performance Regression Tests should not degrade performance over time
00:07 +320 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/simple_debug_test.dart: Simple Debug Tests test basic word filtering
00:07 +321 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/simple_debug_test.dart: Simple Debug Tests test basic word filtering
00:07 +322 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/ffi_service_error_handling_test.dart: FFI Service Error Handling Tests Service Unavailable Scenarios should handle service not initialized
00:07 +323 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/simple_debug_test.dart: Simple Debug Tests (tearDownAll)
00:07 +323 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/ffi_service_error_handling_test.dart: FFI Service Error Handling Tests Service Unavailable Scenarios should handle service in error state
00:07 +324 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/ffi_service_error_handling_test.dart: FFI Service Error Handling Tests Recovery and Resilience should provide meaningful error messages
00:07 +325 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests (setUpAll)
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:07 +325 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should display game screen when initialized
00:07 +326 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should display game screen when initialized
00:07 +327 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should display game screen when initialized
00:07 +328 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should display game screen when initialized
00:07 +329 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should display game screen when initialized
00:07 +330 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should display game screen when initialized
00:07 +331 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should display game screen when initialized
00:07 +332 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should display game screen when initialized
00:07 +333 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should display game screen when initialized
00:07 +334 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should display game screen when initialized
00:07 +335 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should display game screen when initialized
00:07 +336 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should display game screen when initialized
00:07 +337 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should display game screen when initialized
00:07 +338 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should display game screen when initialized
00:07 +339 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should display game screen when initialized
00:07 +340 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should display game screen when initialized
00:07 +341 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should display game screen when initialized
00:07 +342 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should display game screen when initialized
00:07 +343 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should display game screen when initialized
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
00:07 +344 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should display game screen when initialized
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:07 +345 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should display game screen when initialized
00:07 +346 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should display game screen when initialized
00:07 +347 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should display game screen when initialized
00:07 +348 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should display game screen when initialized
00:07 +349 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/ffi_service_guess_functions_test.dart: FFI Service Guess Functions Tests getIntelligentGuessFast() should return valid suggestions
00:07 +350 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should display error message when initialization fails
00:07 +351 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should display error message when initialization fails
00:07 +352 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should display error message when initialization fails
00:07 +353 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should display error message when initialization fails
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:07 +354 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should display error message when initialization fails
00:07 +355 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should display error message when initialization fails
00:07 +356 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should display error message when initialization fails
00:07 +357 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should display error message when initialization fails
00:07 +358 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should display error message when initialization fails
00:07 +359 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/mock_services_test.dart: Real Services Tests GameService should create games
00:07 +360 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should display game interface when successfully initialized
00:07 +361 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should display game interface when successfully initialized
00:07 +362 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should display app bar with title (no refresh button)
00:07 +363 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should handle letter key presses correctly
00:08 +364 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should handle backspace key press correctly
00:08 +365 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should handle enter key press with valid word
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:08 +366 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should handle enter key press with valid word
00:08 +367 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should handle enter key press with valid word
00:08 +368 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should handle enter key press with valid word
00:08 +369 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should handle enter key press with valid word
00:08 +370 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should handle enter key press with valid word
00:08 +371 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should handle enter key press with valid word
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:08 +372 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should handle enter key press with valid word
00:08 +373 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should handle enter key press with valid word
00:08 +374 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should handle enter key press with valid word
00:08 +374 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark

🎯 STATISTICAL BENCHMARK TEST
==============================
📚 Running 200 games for statistical significance

00:08 +375 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/filtering_parity_test.dart: Filtering Parity (gray/yellow/green) (setUpAll)
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:08 +375 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:08 +376 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:08 +377 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:08 +378 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:08 +379 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:08 +380 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:08 +381 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
📊 Progress Update - Games 50: Success Rate: 100.0%, Avg Guesses: 3.32
00:08 +382 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
00:08 +382 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/debug_benchmark_test.dart: Debug Benchmark Test Debug benchmark with 5 games

🎯 DEBUGGING BENCHMARK TEST
============================
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets

🎮 GAME 1
==========
🎯 Target: GULPH
🤖 Guess 1: TARES
00:08 +383 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:08 +383 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/debug_benchmark_test.dart: Debug Benchmark Test Debug benchmark with 5 games
📊 Result: XXXXX
00:08 +384 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:08 +385 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:08 +386 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:08 +387 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:08 +388 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:08 +389 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:08 +389 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/debug_benchmark_test.dart: Debug Benchmark Test Debug benchmark with 5 games
🤖 Guess 2: DOILY
📊 Result: XXXYX
🤖 Guess 3: FLUNG
📊 Result: XYYXY
🤖 Guess 4: GULPH
📊 Result: GGGGG
🎉 WON in 4 guesses!

🎮 GAME 2
==========
🎯 Target: GOOKS
🤖 Guess 1: TARES
📊 Result: XXXXG
00:08 +390 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:08 +390 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/debug_benchmark_test.dart: Debug Benchmark Test Debug benchmark with 5 games
🤖 Guess 2: SOILS
📊 Result: XGXXG
🤖 Guess 3: HOOPS
📊 Result: XGGXG
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
🤖 Guess 4: GOOGS
📊 Result: GGGXG
00:08 +390 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:08 +390 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/debug_benchmark_test.dart: Debug Benchmark Test Debug benchmark with 5 games
🤖 Guess 5: GOOKS
📊 Result: GGGGG
🎉 WON in 5 guesses!

🎮 GAME 3
==========
🎯 Target: LEWIS
🤖 Guess 1: TARES
📊 Result: XXXYG
🤖 Guess 2: PELFS
📊 Result: XGYXG
🤖 Guess 3: LEXIS
📊 Result: GGXGG
🤖 Guess 4: LEWIS
📊 Result: GGGGG
🎉 WON in 4 guesses!

🎮 GAME 4
==========
🎯 Target: BHOOT
🤖 Guess 1: TARES
📊 Result: YXXXX
🤖 Guess 2: COUTH
📊 Result: XYXYY
00:08 +391 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:08 +391 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/debug_benchmark_test.dart: Debug Benchmark Test Debug benchmark with 5 games
🤖 Guess 3: BHOOT
📊 Result: GGGGG
🎉 WON in 3 guesses!

🎮 GAME 5
==========
🎯 Target: YARCO
🤖 Guess 1: TARES
📊 Result: XGGXX
🤖 Guess 2: BARMY
📊 Result: XGGXY
🤖 Guess 3: YARCO
📊 Result: GGGGG
🎉 WON in 3 guesses!

📊 BENCHMARK RESULTS
====================
Games won: 5/5
Success rate: 100.0%
Average guesses: 3.80
00:08 +392 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:08 +393 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:08 +394 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:08 +395 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:08 +396 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:08 +397 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:08 +398 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:08 +399 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:08 +400 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:09 +401 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:09 +402 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:09 +403 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
📊 Progress Update - Games 100: Success Rate: 99.0%, Avg Guesses: 3.42
00:09 +404 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:09 +405 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
📊 Progress Update - Games 150: Success Rate: 99.3%, Avg Guesses: 3.43
00:09 +406 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
00:09 +407 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:09 +408 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:09 +409 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:09 +410 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:09 +411 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:09 +412 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:09 +413 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:09 +414 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:09 +415 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:09 +416 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:09 +417 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:09 +418 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:09 +419 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:09 +420 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:09 +421 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:09 +422 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:09 +423 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:09 +424 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:09 +425 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:09 +426 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:09 +427 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:09 +428 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:09 +429 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:09 +430 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:09 +431 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:09 +432 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:09 +433 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:09 +434 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:09 +435 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:09 +436 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
00:09 +437 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/statistical_benchmark_test.dart: Statistical Benchmark Tests 200-game statistical benchmark
📊 Progress Update - Games 200: Success Rate: 99.5%, Avg Guesses: 3.46

📈 STATISTICAL BENCHMARK REPORT
================================

🎯 PERFORMANCE SUMMARY
Sample Size: 200 words
Benchmark Duration: 1.65s
Success Rate: 99.5% (Target: ≥98%)
Average Guesses: 3.46 (Target: ≤4.0)
Average Speed: 0.008s per game

📊 GUESS DISTRIBUTION
  1 guess: 0 games (0.0%)
  2 guesses: 11 games (5.5%)
  3 guesses: 96 games (48.0%)
  4 guesses: 83 games (41.5%)
  5 guesses: 9 games (4.5%)
  6 guesses: 0 games (0.0%)

🎯 STATISTICAL SIGNIFICANCE
Sample size of 200 provides high confidence
in algorithm performance metrics.
00:10 +438 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should initialize within performance limits
00:10 +439 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should initialize within performance limits
00:10 +440 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should handle game over state correctly
00:10 +441 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle rapid key presses efficiently
00:10 +442 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle rapid key presses efficiently
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:10 +443 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle rapid key presses efficiently
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
00:10 +444 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should not auto-evaluate guesses - user must input letter states manually
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:10 +445 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should not auto-evaluate guesses - user must input letter states manually
00:10 +446 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should not auto-evaluate guesses - user must input letter states manually
00:10 +447 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should not auto-evaluate guesses - user must input letter states manually
00:10 +448 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should not auto-evaluate guesses - user must input letter states manually
00:10 +449 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should not auto-evaluate guesses - user must input letter states manually
00:10 +450 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should not auto-evaluate guesses - user must input letter states manually
00:10 +451 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should not auto-evaluate guesses - user must input letter states manually
00:10 +452 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should not auto-evaluate guesses - user must input letter states manually
00:10 +453 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should not auto-evaluate guesses - user must input letter states manually
00:10 +454 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should not auto-evaluate guesses - user must input letter states manually
00:10 +455 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should not auto-evaluate guesses - user must input letter states manually
00:10 +456 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should not auto-evaluate guesses - user must input letter states manually
00:10 +457 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should not auto-evaluate guesses - user must input letter states manually
00:10 +458 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should not auto-evaluate guesses - user must input letter states manually
00:10 +459 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should not auto-evaluate guesses - user must input letter states manually
00:10 +460 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should not auto-evaluate guesses - user must input letter states manually
00:10 +461 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should not auto-evaluate guesses - user must input letter states manually
00:10 +462 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should not auto-evaluate guesses - user must input letter states manually
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:10 +463 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should not auto-evaluate guesses - user must input letter states manually
00:10 +464 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should not auto-evaluate guesses - user must input letter states manually
00:10 +465 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should not auto-evaluate guesses - user must input letter states manually
00:10 +466 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should not auto-evaluate guesses - user must input letter states manually
00:10 +467 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should not auto-evaluate guesses - user must input letter states manually
00:10 +468 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should not auto-evaluate guesses - user must input letter states manually
00:10 +469 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should not auto-evaluate guesses - user must input letter states manually
00:10 +470 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should not auto-evaluate guesses - user must input letter states manually
00:10 +471 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should maintain smooth animations
00:10 +472 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should maintain smooth animations
00:10 +473 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should allow user to click on letters to change their states (G/G/Y)
00:10 +474 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should allow user to click on letters to change their states (G/G/Y)
00:10 +475 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should allow user to click on letters to change their states (G/G/Y)
00:10 +476 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should allow user to click on letters to change their states (G/G/Y)
00:10 +477 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should allow user to click on letters to change their states (G/G/Y)
00:10 +478 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should allow user to click on letters to change their states (G/G/Y)
00:10 +479 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should allow user to click on letters to change their states (G/G/Y)
00:10 +480 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should allow user to click on letters to change their states (G/G/Y)
00:10 +481 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should allow user to click on letters to change their states (G/G/Y)
00:10 +482 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should allow user to click on letters to change their states (G/G/Y)
00:10 +483 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should allow user to click on letters to change their states (G/G/Y)
00:10 +484 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should allow user to click on letters to change their states (G/G/Y)
00:10 +485 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle memory efficiently with multiple games
00:10 +486 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide visual feedback when letters are clicked
00:11 +487 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide visual feedback when letters are clicked
00:11 +488 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle complex game states efficiently
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:11 +489 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle complex game states efficiently
00:11 +490 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle complex game states efficiently
00:11 +491 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle complex game states efficiently
00:11 +492 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle complex game states efficiently
00:11 +493 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle complex game states efficiently
00:11 +494 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle complex game states efficiently
00:11 +495 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle complex game states efficiently
00:11 +496 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle complex game states efficiently
00:11 +497 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle complex game states efficiently
00:11 +498 -9: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle complex game states efficiently
00:11 +498 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle complex game states efficiently
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:11 +499 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle complex game states efficiently
00:11 +499 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/project_setup_test.dart: Flutter Project Setup Tests test directory has proper structure [E]
  Expected: true
    Actual: <false>
  
  package:matcher                                     expect
  package:flutter_test/src/widget_tester.dart 473:18  expect
  test/project_setup_test.dart 107:7                  main.<fn>.<fn>
  
00:11 +500 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle complex game states efficiently
00:11 +501 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle complex game states efficiently
00:11 +502 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle complex game states efficiently
00:11 +503 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle complex game states efficiently
00:11 +504 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle complex game states efficiently
00:11 +505 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle complex game states efficiently
00:11 +506 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle complex game states efficiently
00:11 +507 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle complex game states efficiently
00:11 +508 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle complex game states efficiently
00:11 +509 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle complex game states efficiently
00:11 +510 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle complex game states efficiently
00:11 +511 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle complex game states efficiently
00:11 +512 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle complex game states efficiently
00:11 +513 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle complex game states efficiently
00:11 +514 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle complex game states efficiently
00:11 +515 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle complex game states efficiently
00:11 +516 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should show modal error instead of full screen error
00:11 +517 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle widget rebuilds efficiently
00:11 +518 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should flash red and restore state when error occurs during GGY changes
00:11 +519 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should flash red and restore state when error occurs during GGY changes
00:11 +520 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle error states efficiently
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:11 +521 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle error states efficiently
00:11 +522 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle error states efficiently
00:11 +523 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle error states efficiently
00:11 +524 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle error states efficiently
00:11 +525 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle error states efficiently
00:11 +526 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle error states efficiently
00:11 +527 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle error states efficiently
00:11 +528 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle error states efficiently
00:11 +529 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle error states efficiently
00:11 +530 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle error states efficiently
00:11 +531 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle error states efficiently
00:11 +532 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +533 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +534 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +535 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +536 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +537 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +538 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +539 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +540 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +541 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +542 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +543 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +544 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +545 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +546 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
00:11 +547 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:11 +548 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +549 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +550 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:11 +551 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +552 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +553 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +554 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +555 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +556 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +557 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +558 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +559 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +560 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +561 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +562 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +563 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +564 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +565 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +566 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +567 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +568 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +569 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +570 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +571 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +572 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +573 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +574 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +575 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +576 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +577 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +578 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:11 +579 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should provide suggestions even with restrictive letter states
00:12 +580 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle concurrent operations efficiently
00:12 +581 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should require ENTER press to submit user-typed words
00:12 +582 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should require ENTER press to submit user-typed words
00:12 +583 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle rapid state transitions efficiently
00:12 +584 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle rapid state transitions efficiently
00:12 +585 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should handle word submission correctly
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:12 +586 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should handle word submission correctly
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:12 +587 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle memory pressure efficiently
00:12 +588 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle memory pressure efficiently
00:12 +589 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle memory pressure efficiently
00:12 +590 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle memory pressure efficiently
00:12 +591 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle memory pressure efficiently
00:12 +592 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle memory pressure efficiently
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:12 +593 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/performance/main_screen_performance_test.dart: Main Screen Performance TDD Tests should handle memory pressure efficiently
00:12 +594 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_grid_test.dart: GameGrid displays empty grid with correct dimensions
00:12 +595 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_grid_test.dart: GameGrid displays empty grid with correct dimensions
00:12 +596 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_grid_test.dart: GameGrid displays empty grid with correct dimensions
00:12 +597 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_grid_test.dart: GameGrid displays empty grid with correct dimensions
00:12 +598 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_controls_test.dart: GameControls Widget Tests Widget Rendering displays new game button and get suggestion button
00:12 +599 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_controls_test.dart: GameControls Widget Tests Widget Rendering displays new game button and get suggestion button
00:12 +600 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_grid_test.dart: GameGrid displays guesses in correct positions
00:13 +601 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_grid_test.dart: GameGrid displays guesses in correct positions
00:13 +602 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should remove last guess when undo button is pressed
00:13 +603 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should remove last guess when undo button is pressed
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:13 +604 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should remove last guess when undo button is pressed
00:13 +605 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/screens/wordle_game_screen_test.dart: WordleGameScreen TDD Tests should remove last guess when undo button is pressed
00:13 +606 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_grid_test.dart: GameGrid displays current input correctly
00:13 +607 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_grid_tdd_test.dart: GameGrid TDD Tests should display empty grid with correct dimensions
00:13 +608 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_grid_tdd_test.dart: GameGrid TDD Tests should display empty grid with correct dimensions
00:13 +609 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_grid_tdd_test.dart: GameGrid TDD Tests should display empty grid with correct dimensions
00:13 +610 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_grid_tdd_test.dart: GameGrid TDD Tests should display empty grid with correct dimensions
00:13 +611 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_grid_tdd_test.dart: GameGrid TDD Tests should display empty grid with correct dimensions
00:13 +612 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_grid_tdd_test.dart: GameGrid TDD Tests should display empty grid with correct dimensions
00:13 +613 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_grid_tdd_test.dart: GameGrid TDD Tests should display empty grid with correct dimensions
00:13 +614 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_grid_tdd_test.dart: GameGrid TDD Tests should display empty grid with correct dimensions
00:13 +615 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_grid_tdd_test.dart: GameGrid TDD Tests should display empty grid with correct dimensions
00:13 +616 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_grid_tdd_test.dart: GameGrid TDD Tests should display empty grid with correct dimensions
00:13 +617 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_grid_tdd_test.dart: GameGrid TDD Tests should display empty grid with correct dimensions
00:13 +618 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_grid_tdd_test.dart: GameGrid TDD Tests should display empty grid with correct dimensions
00:13 +619 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_grid_tdd_test.dart: GameGrid TDD Tests should display empty grid with correct dimensions
00:13 +620 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_grid_tdd_test.dart: GameGrid TDD Tests should display empty grid with correct dimensions
00:13 +621 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_grid_tdd_test.dart: GameGrid TDD Tests should display empty grid with correct dimensions
00:13 +622 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_grid_tdd_test.dart: GameGrid TDD Tests should display empty grid with correct dimensions
00:13 +623 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_grid_tdd_test.dart: GameGrid TDD Tests should display empty grid with correct dimensions
00:13 +624 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_grid_tdd_test.dart: GameGrid TDD Tests should display empty grid with correct dimensions
00:13 +625 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_grid_tdd_test.dart: GameGrid TDD Tests should display empty grid with correct dimensions
00:13 +626 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_grid_tdd_test.dart: GameGrid TDD Tests should display empty grid with correct dimensions
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:13 +627 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_grid_tdd_test.dart: GameGrid TDD Tests should display empty grid with correct dimensions
00:13 +628 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_grid_tdd_test.dart: GameGrid TDD Tests should display empty grid with correct dimensions
00:13 +629 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_grid_tdd_test.dart: GameGrid TDD Tests should display empty grid with correct dimensions
00:13 +630 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_grid_tdd_test.dart: GameGrid TDD Tests should display empty grid with correct dimensions
00:13 +631 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_grid_tdd_test.dart: GameGrid TDD Tests should display empty grid with correct dimensions
00:13 +632 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_grid_tdd_test.dart: GameGrid TDD Tests should display empty grid with correct dimensions
00:13 +633 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_grid_tdd_test.dart: GameGrid TDD Tests should display empty grid with correct dimensions
00:13 +634 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_grid_tdd_test.dart: GameGrid TDD Tests should display empty grid with correct dimensions
00:13 +635 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_status_test.dart: GameStatus Widget Tests Widget Rendering displays all status information
00:13 +636 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_status_test.dart: GameStatus Widget Tests Widget Rendering displays all status information
00:13 +637 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_status_test.dart: GameStatus Widget Tests Widget Rendering displays all status information
00:13 +638 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_status_test.dart: GameStatus Widget Tests Widget Rendering displays all status information
00:13 +639 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_status_test.dart: GameStatus Widget Tests Widget Rendering displays all status information
00:13 +640 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_status_test.dart: GameStatus Widget Tests Widget Rendering displays all status information
00:13 +641 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_status_test.dart: GameStatus Widget Tests Widget Rendering displays all status information
00:13 +642 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_status_test.dart: GameStatus Widget Tests Widget Rendering displays all status information
00:13 +643 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_status_test.dart: GameStatus Widget Tests Widget Rendering displays all status information
00:13 +644 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_status_test.dart: GameStatus Widget Tests Widget Rendering displays all status information
00:13 +645 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_status_test.dart: GameStatus Widget Tests Widget Rendering displays all status information
00:13 +646 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_status_test.dart: GameStatus Widget Tests Widget Rendering displays all status information
00:13 +647 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_status_test.dart: GameStatus Widget Tests Widget Rendering displays all status information
00:13 +648 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_status_test.dart: GameStatus Widget Tests Widget Rendering displays all status information
00:13 +649 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_status_test.dart: GameStatus Widget Tests Widget Rendering displays all status information
00:13 +650 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_status_test.dart: GameStatus Widget Tests Widget Rendering displays all status information
00:13 +651 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_status_test.dart: GameStatus Widget Tests Widget Rendering displays all status information
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:13 +652 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_status_test.dart: GameStatus Widget Tests Widget Rendering displays all status information
00:13 +653 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_status_test.dart: GameStatus Widget Tests Widget Rendering displays all status information
00:13 +654 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_status_test.dart: GameStatus Widget Tests Widget Rendering displays all status information
00:13 +655 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_status_test.dart: GameStatus Widget Tests Widget Rendering displays all status information
00:13 +656 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_status_test.dart: GameStatus Widget Tests Widget Rendering displays all status information
00:13 +657 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/letter_tile_tdd_test.dart: LetterTile TDD Tests should display letter correctly
00:13 +658 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/letter_tile_tdd_test.dart: LetterTile TDD Tests should display letter correctly
00:13 +659 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/letter_tile_tdd_test.dart: LetterTile TDD Tests should display letter correctly
00:13 +660 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/letter_tile_tdd_test.dart: LetterTile TDD Tests should display letter correctly
00:13 +661 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/letter_tile_tdd_test.dart: LetterTile TDD Tests should display letter correctly
00:13 +662 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/letter_tile_tdd_test.dart: LetterTile TDD Tests should display letter correctly
00:13 +663 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/letter_tile_tdd_test.dart: LetterTile TDD Tests should display letter correctly
00:13 +664 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/letter_tile_tdd_test.dart: LetterTile TDD Tests should display letter correctly
00:13 +665 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/letter_tile_tdd_test.dart: LetterTile TDD Tests should display letter correctly
00:13 +666 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/letter_tile_tdd_test.dart: LetterTile TDD Tests should display letter correctly
00:13 +667 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/letter_tile_tdd_test.dart: LetterTile TDD Tests should display letter correctly
00:13 +668 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/letter_tile_tdd_test.dart: LetterTile TDD Tests should display letter correctly
00:13 +669 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/letter_tile_tdd_test.dart: LetterTile TDD Tests should display letter correctly
00:13 +670 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/letter_tile_tdd_test.dart: LetterTile TDD Tests should display letter correctly
00:13 +671 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/letter_tile_tdd_test.dart: LetterTile TDD Tests should display letter correctly
00:13 +672 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/letter_tile_tdd_test.dart: LetterTile TDD Tests should display letter correctly
00:14 +673 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/letter_tile_tdd_test.dart: LetterTile TDD Tests should display letter correctly
00:14 +674 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/letter_tile_tdd_test.dart: LetterTile TDD Tests should display letter correctly
00:14 +675 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/letter_tile_tdd_test.dart: LetterTile TDD Tests should display letter correctly
00:14 +676 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/letter_tile_tdd_test.dart: LetterTile TDD Tests should display letter correctly
00:14 +677 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/letter_tile_tdd_test.dart: LetterTile TDD Tests should display letter correctly
00:14 +678 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/letter_tile_tdd_test.dart: LetterTile TDD Tests should display letter correctly
00:14 +679 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/letter_tile_tdd_test.dart: LetterTile TDD Tests should display letter correctly
00:14 +680 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/letter_tile_tdd_test.dart: LetterTile TDD Tests should display letter correctly
00:14 +681 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/letter_tile_tdd_test.dart: LetterTile TDD Tests should display letter correctly
00:14 +682 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/letter_tile_tdd_test.dart: LetterTile TDD Tests should display letter correctly
00:14 +683 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/letter_tile_tdd_test.dart: LetterTile TDD Tests should display letter correctly
00:14 +684 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/letter_tile_tdd_test.dart: LetterTile TDD Tests should display letter correctly
00:14 +685 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/letter_tile_tdd_test.dart: LetterTile TDD Tests should display letter correctly
00:14 +686 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_status_test.dart: GameStatus Widget Tests Edge Cases and Boundary Conditions handles rapid state changes efficiently
00:14 +687 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_status_test.dart: GameStatus Widget Tests Edge Cases and Boundary Conditions handles rapid state changes efficiently
00:14 +688 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_status_test.dart: GameStatus Widget Tests Edge Cases and Boundary Conditions handles rapid state changes efficiently
00:14 +689 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/letter_tile_tdd_test.dart: LetterTile TDD Tests should show correct color for gray state
00:14 +690 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_status_test.dart: GameStatus Widget Tests Accessibility provides proper semantic labels for screen readers
00:14 +691 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/letter_tile_tdd_test.dart: LetterTile TDD Tests should show correct color for yellow state
00:14 +692 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/letter_tile_tdd_test.dart: LetterTile TDD Tests should show correct color for yellow state
00:14 +693 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/simple_widget_test.dart: Simple Widget Tests (setUpAll)
00:14 +694 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/simple_widget_test.dart: Simple Widget Tests (setUpAll)
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:14 +694 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_status_test.dart: GameStatus Widget Tests Accessibility supports keyboard navigation
00:14 +695 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/game_status_test.dart: GameStatus Widget Tests Accessibility supports keyboard navigation
00:14 +696 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/simple_widget_test.dart: Simple Widget Tests should render letter tile correctly
00:14 +697 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/simple_widget_test.dart: Simple Widget Tests should render letter tile correctly
00:14 +698 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/simple_widget_test.dart: Simple Widget Tests should render letter tile correctly
00:14 +699 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/simple_widget_test.dart: Simple Widget Tests should render letter tile correctly
00:14 +700 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/simple_widget_test.dart: Simple Widget Tests should render letter tile correctly
00:14 +701 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/simple_widget_test.dart: Simple Widget Tests should render letter tile correctly
00:14 +702 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/simple_widget_test.dart: Simple Widget Tests should render letter tile correctly
00:14 +703 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/simple_widget_test.dart: Simple Widget Tests should render letter tile correctly
00:14 +704 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/simple_widget_test.dart: Simple Widget Tests should render letter tile correctly
00:14 +705 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/simple_widget_test.dart: Simple Widget Tests should render letter tile correctly
00:14 +706 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/simple_widget_test.dart: Simple Widget Tests should render letter tile correctly
00:14 +707 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/simple_widget_test.dart: Simple Widget Tests should render letter tile correctly
00:14 +708 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/simple_widget_test.dart: Simple Widget Tests should render letter tile correctly
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:14 +709 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_tdd_test.dart: VirtualKeyboard TDD Tests should display QWERTY layout correctly
00:14 +710 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_tdd_test.dart: VirtualKeyboard TDD Tests should display QWERTY layout correctly
00:14 +711 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_tdd_test.dart: VirtualKeyboard TDD Tests should display QWERTY layout correctly
00:14 +712 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_tdd_test.dart: VirtualKeyboard TDD Tests should display QWERTY layout correctly
00:14 +713 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_tdd_test.dart: VirtualKeyboard TDD Tests should display QWERTY layout correctly
00:14 +714 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_tdd_test.dart: VirtualKeyboard TDD Tests should display QWERTY layout correctly
00:14 +715 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_tdd_test.dart: VirtualKeyboard TDD Tests should display QWERTY layout correctly
00:14 +716 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_tdd_test.dart: VirtualKeyboard TDD Tests should display QWERTY layout correctly
00:14 +717 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_tdd_test.dart: VirtualKeyboard TDD Tests should display QWERTY layout correctly
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:14 +718 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_tdd_test.dart: VirtualKeyboard TDD Tests should display QWERTY layout correctly
00:14 +719 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_tdd_test.dart: VirtualKeyboard TDD Tests should display QWERTY layout correctly
00:14 +720 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_tdd_test.dart: VirtualKeyboard TDD Tests should display QWERTY layout correctly
00:14 +721 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_tdd_test.dart: VirtualKeyboard TDD Tests should display QWERTY layout correctly
00:14 +722 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_tdd_test.dart: VirtualKeyboard TDD Tests should display QWERTY layout correctly
00:14 +723 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_tdd_test.dart: VirtualKeyboard TDD Tests should display QWERTY layout correctly
00:14 +724 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_tdd_test.dart: VirtualKeyboard TDD Tests should display QWERTY layout correctly
00:14 +725 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_tdd_test.dart: VirtualKeyboard TDD Tests should display QWERTY layout correctly
00:15 +726 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_test.dart: VirtualKeyboard displays QWERTY layout
00:15 +727 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/letter_tile_test.dart: LetterTile displays letter correctly
00:15 +728 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/letter_tile_test.dart: LetterTile displays letter correctly
00:15 +729 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/letter_tile_test.dart: LetterTile displays letter correctly
00:15 +730 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/letter_tile_test.dart: LetterTile displays letter correctly
00:15 +731 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/letter_tile_test.dart: LetterTile displays letter correctly
00:15 +732 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/simple_widget_test.dart: Simple Widget Tests should handle performance under load
00:15 +733 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_tdd_test.dart: VirtualKeyboard TDD Tests should show correct color states for keys
00:15 +734 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_tdd_test.dart: VirtualKeyboard TDD Tests should show correct color states for keys
00:15 +735 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_tdd_test.dart: VirtualKeyboard TDD Tests should show correct color states for keys
00:15 +736 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_tdd_test.dart: VirtualKeyboard TDD Tests should show correct color states for keys
00:15 +737 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_tdd_test.dart: VirtualKeyboard TDD Tests should show correct color states for keys
00:15 +738 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_tdd_test.dart: VirtualKeyboard TDD Tests should show correct color states for keys
00:15 +739 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_tdd_test.dart: VirtualKeyboard TDD Tests should show correct color states for keys
00:15 +740 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_tdd_test.dart: VirtualKeyboard TDD Tests should show correct color states for keys
00:15 +741 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_tdd_test.dart: VirtualKeyboard TDD Tests should show correct color states for keys
00:15 +742 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_tdd_test.dart: VirtualKeyboard TDD Tests should show correct color states for keys
00:15 +743 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/ffi_usage_analysis_test.dart: FFI Usage Analysis Tests (setUpAll)
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:15 +744 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/ffi_usage_analysis_test.dart: FFI Usage Analysis Tests (setUpAll)
00:15 +744 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/letter_tile_test.dart: LetterTile shows correct text color for different states when revealed
00:15 +745 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/letter_tile_test.dart: LetterTile shows correct text color for different states when revealed
00:15 +746 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_tdd_test.dart: VirtualKeyboard TDD Tests should disable keys when in disabledKeys set
00:15 +747 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_tdd_test.dart: VirtualKeyboard TDD Tests should disable keys when in disabledKeys set
00:15 +748 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_tdd_test.dart: VirtualKeyboard TDD Tests should disable keys when in disabledKeys set
00:15 +749 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_tdd_test.dart: VirtualKeyboard TDD Tests should disable keys when in disabledKeys set
00:15 +750 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_tdd_test.dart: VirtualKeyboard TDD Tests should disable keys when in disabledKeys set
00:15 +751 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_tdd_test.dart: VirtualKeyboard TDD Tests should disable keys when in disabledKeys set
00:15 +752 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_test.dart: VirtualKeyboard shows disabled state visually
00:15 +753 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_test.dart: VirtualKeyboard shows disabled state visually
00:15 +754 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_test.dart: VirtualKeyboard shows disabled state visually
00:15 +755 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_test.dart: VirtualKeyboard shows disabled state visually
00:15 +756 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_test.dart: VirtualKeyboard shows disabled state visually
00:15 +757 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_test.dart: VirtualKeyboard shows disabled state visually
00:15 +758 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_tdd_test.dart: VirtualKeyboard TDD Tests should show disabled state visually
00:15 +759 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_tdd_test.dart: VirtualKeyboard TDD Tests should show disabled state visually
00:15 +760 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_tdd_test.dart: VirtualKeyboard TDD Tests should show disabled state visually
00:15 +761 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_tdd_test.dart: VirtualKeyboard TDD Tests should show disabled state visually
00:15 +762 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_tdd_test.dart: VirtualKeyboard TDD Tests should show disabled state visually
00:15 +763 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_tdd_test.dart: VirtualKeyboard TDD Tests should show disabled state visually
00:15 +764 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_tdd_test.dart: VirtualKeyboard TDD Tests should have proper key sizing and spacing
00:15 +765 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_tdd_test.dart: VirtualKeyboard TDD Tests should handle rapid key tapping correctly
00:15 +766 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/widgets/virtual_keyboard_tdd_test.dart: VirtualKeyboard TDD Tests should handle all letter keys correctly
Shell: 📚 Loaded 2300 answer words from assets/word_lists/official_wordle_words.json
Shell: 📚 Loaded 14855 guess words from assets/word_lists/official_guess_words.txt
Shell: 🔍 Computing optimal first guess from 14855 guess words
Shell: ✅ Found optimal first guess: TARES
Shell: ✅ Rust loaded 2300 answer words and 14855 guess words directly from assets
00:15 +766 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/centralized_ffi_benchmark_test.dart: Centralized FFI Benchmark Tests 500-game benchmark with centralized FFI

🎯 Wordle Solver Benchmark Tool
================================
📚 Loaded 2300 answer words from centralized FFI
📚 Loaded 14855 guess words from centralized FFI

🎯 Running 50-Game Wordle Benchmark...
🎲 Running Random Wordle Answer Benchmark
📊 Testing on 50 random Wordle answer words...
00:15 +767 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/centralized_ffi_benchmark_test.dart: Centralized FFI Benchmark Tests 500-game benchmark with centralized FFI
00:15 +768 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/centralized_ffi_benchmark_test.dart: Centralized FFI Benchmark Tests 500-game benchmark with centralized FFI
📊 Progress Update - Games 10: Success Rate: 100.0%, Avg Guesses: 3.50
00:15 +769 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/centralized_ffi_benchmark_test.dart: Centralized FFI Benchmark Tests 500-game benchmark with centralized FFI
00:16 +770 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/centralized_ffi_benchmark_test.dart: Centralized FFI Benchmark Tests 500-game benchmark with centralized FFI
00:16 +771 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/centralized_ffi_benchmark_test.dart: Centralized FFI Benchmark Tests 500-game benchmark with centralized FFI
📊 Progress Update - Games 20: Success Rate: 100.0%, Avg Guesses: 3.50
00:16 +772 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/centralized_ffi_benchmark_test.dart: Centralized FFI Benchmark Tests 500-game benchmark with centralized FFI
00:16 +773 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/centralized_ffi_benchmark_test.dart: Centralized FFI Benchmark Tests 500-game benchmark with centralized FFI
00:16 +774 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/centralized_ffi_benchmark_test.dart: Centralized FFI Benchmark Tests 500-game benchmark with centralized FFI
00:16 +775 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/centralized_ffi_benchmark_test.dart: Centralized FFI Benchmark Tests 500-game benchmark with centralized FFI
📊 Progress Update - Games 30: Success Rate: 100.0%, Avg Guesses: 3.57
00:16 +776 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/centralized_ffi_benchmark_test.dart: Centralized FFI Benchmark Tests 500-game benchmark with centralized FFI
00:16 +777 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/centralized_ffi_benchmark_test.dart: Centralized FFI Benchmark Tests 500-game benchmark with centralized FFI
📊 Progress Update - Games 40: Success Rate: 100.0%, Avg Guesses: 3.67
📊 Progress Update - Games 50: Success Rate: 100.0%, Avg Guesses: 3.60

📈 WORDLE SOLVER BENCHMARK REPORT
=====================================

🎯 PERFORMANCE SUMMARY
Sample Size: 50 words
Benchmark Duration: 0.45s
00:16 +778 -10: /Users/chaos/dev/wrdlHelper/wrdlHelper/test/centralized_ffi_benchmark_test.dart: Centralized FFI Benchmark Tests (tearDownAll)
00:16 +778 -10: Some tests failed.
